-- SEQUENCE : 순차번호 자동 생성 객체 (PRIMARY KEY에서 순차번호 생성이 필요할 때)
-- 순차번호(PK), 친구이름, 전화, 최종수정일
-- 1  홍길동  010-9999-8889 19/12/30
-- 2  김길동  NULL          19/12/30
DROP SEQUENCE FRIEND_SEQno;
CREATE SEQUENCE FRIEND_SEQno 
        INCREMENT BY 1
        START WITH 1
        MAXVALUE 9999
        MINVALUE 1
        NOCYCLE
        NOCACHE;  -- 1,2,3,4,5
DROP TABLE FRIEND;
CREATE TABLE FRIEND(
    NUM NUMBER(4) PRIMARY KEY,  -- 순차번호
    NAME VARCHAR2(50),          -- 친구이름
    TEL  VARCHAR2(30) UNIQUE,   -- 친구전화
    LAST_MODIFIED DATE DEFAULT SYSDATE);        -- 최종수정일
INSERT INTO FRIEND (NUM, NAME, TEL) VALUES
                    (FRIEND_SEQno.NEXTVAL, '홍길동', '010-9999-9999');
INSERT INTO FRIEND (NUM, NAME) VALUES
                    (FRIEND_SEQno.NEXTVAL, '힝길동'); -- 3번실행
SELECT * FROM FRIEND;
SELECT FRIEND_SEQno.CURRVAL FROM DUAL; -- CURRVAL : 현재 시퀀스 값
CREATE SEQUENCE FRIEND_SEQ 
    MAXVALUE 99999
    NOCYCLE
    NOCACHE;

-- 시퀀스 연습문제
DROP TABLE CUSTOMER;
DROP TABLE CUS_LEVEL;
CREATE TABLE CUS_LEVEL(
    LEVELNO NUMBER(1) PRIMARY KEY,
    LEVELNAME VARCHAR2(20) NOT NULL);
CREATE SEQUENCE CUS_SQ MAXVALUE 9999;
CREATE TABLE CUSTOMER(
    CNO NUMBER(4) PRIMARY KEY,
    CNAME VARCHAR2(50) NOT NULL,
    JOINDATE DATE DEFAULT SYSDATE,
    PHONE VARCHAR2(50) UNIQUE,
    POINT NUMBER,
    LEVELNO NUMBER(1) REFERENCES CUS_LEVEL(LEVELNO));
INSERT INTO CUS_LEVEL VALUES (1, 'VVIP');
INSERT INTO CUS_LEVEL VALUES (2, 'VIP');
INSERT INTO CUS_LEVEL VALUES (3, 'NORMAL');
INSERT INTO CUS_LEVEL VALUES (4, 'BLACK');
INSERT INTO CUSTOMER VALUES (CUS_SQ.NEXTVAL, '홍길동', 
                TO_DATE('20171017','YYYYMMDD'),'010-9999-9999',300,1);
INSERT INTO CUSTOMER VALUES (CUS_SQ.NEXTVAL, '이철수', 
                TO_DATE('20160906','YYYYMMDD'),'010-9999-8888',NULL,2);
INSERT INTO CUSTOMER VALUES (CUS_SQ.NEXTVAL, '홍길순', 
                TO_DATE('20160907','YYYYMMDD'),'010-9999-7777',50,3);
SELECT * FROM CUSTOMER;

-- 5
SELECT CNO, CNAME, TO_CHAR(JOINDATE,'YYYY-MM-DD'), PHONE, POINT, LEVELNAME
    FROM CUS_LEVEL L, CUSTOMER C
    WHERE L.LEVELNO=C.LEVELNO;

INSERT INTO CUSTOMER VALUES (CUS_SQ.NEXTVAL, '홍길순', 
                TO_DATE('20160907','YYYYMMDD'),'010-9999-6666',50,3);
SELECT * FROM CUSTOMER;

-- VIEW (가상의 테이블)
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, DEPTNO FROM EMP; -- 단순뷰
SELECT * FROM EMPv0 WHERE DEPTNO=20;
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, DNAME FROM DEPT D, EMP E
                WHERE D.DEPTNO=E.DEPTNO; -- 복합뷰
SELECT * FROM EMPv0;
-- 부서번호가 30번부서 직원들만 EMPv1 뷰 생성
CREATE OR REPLACE VIEW EMPv1
    AS SELECT * FROM EMP WHERE DEPTNO=30;
SELECT * FROM EMPv1;
INSERT INTO EMPv1 VALUES (1111,'홍',NULL, NULL, SYSDATE, NULL, NULL, 40);
SELECT * FROM EMP;
CREATE OR REPLACE VIEW EMPv1
    AS SELECT * FROM EMP WHERE DEPTNO=30 WITH CHECK OPTION;--30번부서만 쓰기가능
INSERT INTO EMPv1 VALUES (1112, '홍', NULL, NULL, SYSDATE, NULL, NULL, 40);-- x
INSERT INTO EMPv1 VALUES (1112, '홍', NULL, NULL, SYSDATE, NULL, NULL, 30);
SELECT * FROM EMPv1;
SELECT * FROM EMP;
CREATE OR REPLACE VIEW EMPv2
    AS SELECT * FROM EMP WHERE DEPTNO=30 WITH READ ONLY; -- EMPv2 SELECT
INSERT INTO EMPv2 VALUES (113, '홍', NULL, NULL, NULL, NULL, NULL, 30); -- x
-- INSERT 불가한 경우
CREATE OR REPLACE VIEW EMPv3
    AS SELECT ENAME, SAL, COMM FROM EMP;
SELECT * FROM EMPv3;
INSERT INTO EMPv3 VALUES ('홍',9000,5000);
CREATE OR REPLACE VIEW SALv1
    AS SELECT EMPNO, ENAME, SAL*12 YEARSAL FROM EMP WHERE DEPTNO=10;
CREATE OR REPLACE VIEW SALv1 (ID, NAME, YEARSAL)
    AS SELECT EMPNO, ENAME, SAL*12 FROM EMP WHERE DEPTNO=10;
SELECT * FROM SALv1;
SELECT * FROM EMP;
INSERT INTO SALv1 VALUES (119, '홍', 12000);

CREATE OR REPLACE VIEW DEPTv1 (DEPTNO, MINSAL, MAXSAL, AVGSAL)
    AS SELECT DEPTNO, MIN(SAL), MAX(SAL), AVG(SAL) FROM EMP GROUP BY DEPTNO;

CREATE OR REPLACE VIEW JOBLIST
    AS SELECT DISTINCT JOB, DEPTNO FROM EMP;

-- inline VIEW : FROM 절의 서브쿼리
-- 급여가 2000을 초과하는 사원의 평균 급여출력
SELECT AVG(SAL) FROM (SELECT SAL FROM EMP WHERE SAL>2000);
-- 이름, 급여, 부서번호, 해당사원의부서평균급여
SELECT ENAME, SAL, DEPTNO, (SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO) 
    FROM EMP E;
DELETE FROM EMP WHERE DEPTNO=40;
COMMIT;
SELECT DEPTNO, AVG(SAL) FROM EMP GROUP BY DEPTNO;
SELECT E.ENAME, E.SAL, E.DEPTNO, S.DEPTNO, S.AVGSAL
    FROM EMP E, (SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) S
    WHERE  E.DEPTNO=S.DEPTNO;
-- 이름, 급여, 부서번호, 부서평균급여 (부서평균보다 많이 받는 사원만 출력)
SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO;
SELECT ENAME, SAL, S.DEPTNO, AVGSAL 
    FROM EMP, (SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) S
    WHERE EMP.DEPTNO=S.DEPTNO AND SAL>AVGSAL;

-- TOP - N 구문
SELECT ROWNUM, ENAME, SAL FROM EMP; -- ROWNUM EMP테이블에서 가져온 순서
-- SAL 등수, ENAME, SAL
SELECT  RANK() OVER(ORDER BY SAL) RANK, 
        DENSE_RANK() OVER(ORDER BY SAL) D_RANK, 
        ROW_NUMBER() OVER(ORDER BY SAL) r_RANK, ENAME, SAL FROM EMP;
        
SELECT ROWNUM, ENAME, SAL FROM EMP ORDER BY SAL; -- x. ROWNUM이 등수가 아님
SELECT ROWNUM, ENAME, SAL FROM (SELECT * FROM EMP ORDER BY SAL)
    WHERE ROWNUM BETWEEN 1 AND 5; -- TOP 1~5
SELECT ROWNUM, ENAME, SAL FROM (SELECT * FROM EMP ORDER BY SAL)
    WHERE ROWNUM BETWEEN 6 AND 10; -- TOP 6~10 (x)
SELECT RN, ENAME, SAL FROM (SELECT ROWNUM RN, ENAME, SAL FROM 
                                            (SELECT * FROM EMP ORDER BY SAL) )
        WHERE RN BETWEEN 11 AND 15; -- TOP 6~10

-- 1. 부서명과 사원명을 출력하는 용도의 뷰, DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DNAME_ENAME_VU
    AS SELECT DNAME, ENAME FROM EMP E, DEPT D WHERE D.DEPTNO=E.DEPTNO;
    
-- 2. 사원명과 직속상관명을 출력하는 용도의 뷰,  WORKER_MANAGER_VU를 작성하시오
CREATE OR REPLACE VIEW WORKER_MANAGER_VU (WORKER, MANAGER)
    AS SELECT W.ENAME, M.ENAME FROM EMP W, EMP M WHERE W.MGR=M.EMPNO;

-- 3. 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수) 
SELECT DEPTNO, SUM(SAL) SUMSAL 
                FROM EMP GROUP BY DEPTNO ORDER BY SUM(SAL) DESC; -- 서브쿼리
select rownum 등수, deptno, sumsal from
    (SELECT DEPTNO, SUM(SAL) SUMSAL 
                FROM EMP GROUP BY DEPTNO ORDER BY SUM(SAL) DESC);
                
-- 4. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE DESC;

-- 5. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 5명을 출력하시오
SELECT EMPNO, ENAME, HIREDATE
    FROM (SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE DESC)
    WHERE ROWNUM<=5;

-- 6. 사원 테이블에서 사번, 사원명, 입사일을 최신부터 오래된 순으로 6번째로 늦은 사원부터 10번째 사원까지 출력
SELECT RN, EMPNO, ENAME, HIREDATE
    FROM (SELECT ROWNUM RN, EMPNO, ENAME, HIREDATE FROM 
                (SELECT * FROM EMP ORDER BY HIREDATE DESC))
    WHERE RN BETWEEN 6 AND 10;












