-- 2019.12.20_ 3장. JOIN(테이블들을 JOIN)
SELECT * FROM EMP; -- 사원정보(14명)
SELECT * FROM DEPT; -- 부서정보

SELECT * FROM EMP WHERE ENAME='SMITH';
SELECT * FROM DEPT;
SELECT * FROM EMP, DEPT WHERE ENAME='SMITH'; -- (1) CROSS JOIN
-- (2) 동등JOIN(EQUI JOIN) : 2개의 테이블에 동일한 필드가 있는 경우(DEPT, EMP테이블에 DEPTNO)
SELECT * FROM EMP, DEPT
    WHERE ENAME='SMITH' AND EMP.DEPTNO=DEPT.DEPTNO;
SELECT * FROM EMP, DEPT
    WHERE EMP.DEPTNO=DEPT.DEPTNO;
SELECT E.*, DNAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO; -- 테이블의 별명을 주면 별명.
-- 사번, 이름, 부서번호, 부서이름, 근무지
SELECT EMPNO, ENAME, E.DEPTNO, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
-- 사번, 이름, 급여, 부서번호(부서코드), 부서명
SELECT EMP.EMPNO, EMP.ENAME, EMP.SAL, DEPT.DEPTNO, DEPT.DNAME FROM EMP, DEPT
    WHERE EMP.DEPTNO=DEPT.DEPTNO;
-- 이름, 업무, 급여, 부서명, 근무지. 급여가 2000이상
SELECT ENAME, JOB, SAL, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND SAL>=2000;
-- 이름, 업무, 부서명, 근무지. 근무지가 CHICAGO인 사람
SELECT ENAME, JOB, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='CHICAGO';
-- 이름, 업무, 근무지. deptno이 10 또는 20인 경우, 급여순 정렬
SELECT ENAME, JOB, LOC FROM EMP E, DEPT D 
    WHERE E.DEPTNO=D.DEPTNO AND E.DEPTNO IN (10,20)
    ORDER BY SAL;
-- 이름, 급여, comm, 연봉(별칭), 부서명, 근무지. 연봉=(SAL+comm)*12 단 comm이 Null이면 0
SELECT ENAME, SAL, COMM, (SAL+NVL(COMM,0))*12 "연봉", DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
-- 위에서 JOB이 SALESMAN이거나 MANAGER를 대상으로 연봉이 큰 순서대로 출력
SELECT ENAME, SAL, NVL(COMM, 0), (SAL+NVL(COMM,0))*12 "연봉", DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB IN ('SALESMAN', 'MANAGER')
    ORDER BY 연봉 DESC;
-- 이름, 급여, 입사일, 부서코드(번호), 부서명. comm이 null이고 급여가 1200이상인 경우. 
        -- 부서명순 정렬. 부서명이 같으면 급여큰순
SELECT ENAME, SAL, HIREDATE, E.DEPTNO, DNAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NULL AND SAL>=1200
    ORDER BY DNAME, SAL DESC;
-- 탄탄다지기
--	뉴욕에서 근무하는 사원의 이름과 급여를 출력하시오
SELECT ENAME, SAL FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';
--	ACCOUNTING 부서 소속 사원의 이름과 입사일을 출력하시오
SELECT ENAME, HIREDATE FROM DEPT D, EMP E WHERE D.DEPTNO=E.DEPTNO AND DNAME='ACCOUNTING';
--	직급이 MANAGER인 사원의 이름, 부서명을 출력하시오
SELECT ENAME, DNAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER';
--	Comm이 null이 아닌 사원의 이름, 급여, 부서코드, 근무지를 출력하시오.
SELECT ENAME, SAL, E.DEPTNO, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NOT NULL;
    
-- (3) NON-EQUI JOIN (동일한 필드가 없는 2개의 테이블을 JOIN)
SELECT * FROM EMP; -- 사원테이블
SELECT * FROM SALGRADE; -- 급여 등급 정보
SELECT ENAME, SAL, SALGRADE.* FROM EMP, SALGRADE 
    WHERE ENAME='SMITH' AND SAL BETWEEN LOSAL AND HISAL;
SELECT ENAME, SAL, GRADE||'등급' GRADE
    FROM EMP, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL;
-- 이름, 급여 (급여>=2000)
SELECT ENAME, SAL FROM EMP WHERE SAL>=2000;
-- 탄탄다지기
-- Comm이 null이 아닌 사원의 이름, 급여, 등급, 부서번호, 부서이름, 근무지를 출력하시오.
SELECT ENAME, SAL, GRADE, E.DEPTNO, DNAME, LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND COMM IS NOT NULL;
-- 이름, 급여, 입사일, 급여등급 (급여등급이 큰 순서대로 정렬, 급여등급이 같으면 SAL 큰 순서대로)
SELECT ENAME, SAL, HIREDATE, GRADE FROM EMP, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL
    ORDER BY GRADE DESC, SAL DESC;
-- 이름, 급여, 입사일, 급여등급, 부서명, 근무지
SELECT ENAME, SAL, HIREDATE, GRADE, DNAME, LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL;
-- 이름, 급여, 등급, 부서코드, 근무지. 단 comm 이 null아닌 경우
SELECT ENAME, SAL, GRADE, E.DEPTNO, LOC FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND COMM IS NOT NULL;
-- 이름, 급여, 급여등급, 연봉, 부서명, (부서별 출력, 부서가 같으면 연봉순) 
    --연봉=(sal+comm)*12 comm이 null이면 0
SELECT ENAME, SAL, GRADE, (SAL+NVL(COMM,0))*12 "연봉", DNAME
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
    ORDER BY DNAME, 연봉;
-- 이름, 업무, 급여, 등급, 부서코드, 부서명 출력.
--급여가 1000~3000사이. 정렬조건 : 부서별, 부서같으면 업무별, 업무같으면 급여 큰순
SELECT ENAME, JOB, SAL, GRADE, E.DEPTNO, DNAME
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND SAL BETWEEN 1000 AND 3000
    ORDER BY DNAME, JOB, SAL DESC;   
-- 이름, 급여, 등급, 입사일, 근무지. 81년에 입사한 사람. 등급 큰순
SELECT ENAME, SAL, GRADE, TO_CHAR(HIREDATE,'YY"년" MM"월 "DD"일" DY"요일" AM HH:MI:SS'), 
    LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND TO_CHAR(HIREDATE, 'YYYY') = '1981';

-- (4) SELF JOIN : 한테이블을 서로 JOIN
SELECT EMPNO, ENAME, MGR FROM EMP; -- MGR : 내직속상사의 사번
SELECT WORKER.EMPNO, WORKER.ENAME, WORKER.MGR,  MANAGER.EMPNO, MANAGER.ENAME
    FROM EMP WORKER, EMP MANAGER
    WHERE WORKER.ENAME='SMITH' AND WORKER.MGR=MANAGER.EMPNO;
-- 사원, 직속상사의 이름
SELECT W.ENAME "사원이름", W.MGR "사원의직속상사사번", M.EMPNO "상사의사번", M.ENAME "상사이름"
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO;
SELECT W.ENAME, M.ENAME FROM EMP W, EMP M WHERE W.MGR=M.EMPNO;
SELECT * FROM EMP;
-- XX의 상사는 XX다
SELECT W.ENAME || '의 상사는 ' || M.ENAME
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO;
--	매니저가 KING인 사원들의 이름과 직급을 출력하시오.
SELECT W.ENAME, W.JOB
    FROM EMP W, EMP M
    WHERE W.MGR = M.EMPNO AND M.ENAME='KING';
--	SCOTT과 동일한 부서번호에서 근무하는 사원의 이름을 출력하시오(1단계)
SELECT E1.ENAME , E1.DEPTNO, E2.DEPTNO, E2.ENAME
    FROM EMP E1, EMP E2
    WHERE E1.ENAME='SCOTT' AND E1.DEPTNO=E2.DEPTNO; -- 전단계
SELECT E2.ENAME FROM EMP E1, EMP E2
    WHERE E1.DEPTNO=E2.DEPTNO AND E1.ENAME='SCOTT' AND E2.ENAME <> 'SCOTT'; -- 최종 답
--	SCOTT과 동일한 근무지에서 근무하는 사원의 이름을 출력하시오(2단계 최종문제)
SELECT E1.ENAME, E1.DEPTNO, D1.DNAME, E2.ENAME, E2.DEPTNO, D2.DNAME
    FROM EMP E1, DEPT D1, EMP E2, DEPT D2
    WHERE E1.DEPTNO=D1.DEPTNO AND E2.DEPTNO=D2.DEPTNO -- EQUI JOIN
        AND E1.ENAME='SCOTT' 
        AND D1.LOC=D2.LOC;    -- SELF JOIN (전단계)
SELECT E2.ENAME FROM EMP E1, DEPT D1, EMP E2, DEPT D2
    WHERE E1.DEPTNO=D1.DEPTNO AND E2.DEPTNO=D2.DEPTNO AND D1.LOC=D2.LOC
        AND E1.ENAME='SCOTT' AND E2.ENAME <> 'SCOTT'; -- 테이블을 4개로 했을 때 최종 답
        
-- TEST 용
SELECT * FROM DEPT;
INSERT INTO DEPT VALUES (50,'IT','DALLAS'); -- 1행 삽입
SELECT * FROM EMP;
INSERT INTO EMP VALUES (9999,'홍길동','MANAGER',7902,'19/12/20',1000,NULL,50);
ROLLBACK; -- INSERT 취소

-- (5) OUTER JOIN : 조인 조건에 만족하지 않는 행을 나타내게 하는 조인
SELECT W.ENAME "부하", W.MGR, M.EMPNO, M.ENAME "직속상사"
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);
-- XX의 매니저는 XX(無)입니다
SELECT W.ENAME || '의 매니저는 ' || NVL(M.ENAME, '無') || '입니다'
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);
-- 말단 사원들 리스트
SELECT M.ENAME FROM EMP W, EMP M WHERE W.MGR(+)=M.EMPNO AND W.ENAME IS NULL;
-- EQUI JOIN에서 손실된 데이터
SELECT * FROM EMP; -- 14명 (10,20,30)
SELECT * FROM DEPT; -- 4개 부서 (10,20,30,40)
SELECT * FROM EMP, DEPT WHERE EMP.DEPTNO(+)=DEPT.DEPTNO;
-- 이름, 업무(JOB), 부서명(DNAME), 급여(SAL) 출력
    --(단, 직원이 없는 부서명도 함께 출력. 부서명, 급여큰순 정렬)
SELECT NVL(ENAME,'-'), NVL(JOB,'-'), DNAME, NVL(TO_CHAR(SAL, '9999'),'-') 
    FROM EMP E, DEPT D
    WHERE E.DEPTNO(+) = D.DEPTNO
    ORDER BY DNAME, SAL DESC;
-- ★ <셤 연습문제> PART1
--1. 이름, 직속상사
SELECT W.ENAME, M.ENAME 직속상사 
  FROM EMP W, EMP M
  WHERE W.MGR=M.EMPNO;
--2. 이름, 급여, 업무, 직속상사
SELECT W.ENAME, W.SAL, W.JOB, M.ENAME 직속상사
  FROM EMP W, EMP M 
  WHERE W.MGR=M.EMPNO;
--3. 이름, 급여, 업무, 직속상사. (상사가 없는 직원까지 전체 직원 다 출력.
    --상사가 없을 시 '없음'으로 출력)
SELECT W.ENAME, W.SAL, W.JOB, NVL(M.ENAME,'없음') 상사 
  FROM EMP W, EMP M 
  WHERE W.MGR=M.EMPNO(+);
--4. 이름, 급여, 부서명, 직속상사명
SELECT W.ENAME, W.SAL, DNAME, M.ENAME 직속상사명
  FROM EMP W, EMP M, DEPT D 
  WHERE W.DEPTNO=D.DEPTNO AND W.MGR=M.EMPNO;
--5. 이름, 급여, 부서코드, 부서명, 근무지, 직속상사명, (상사가 없는 직원까지 전체 직원 다 출력)
SELECT W.ENAME, W.SAL, W.DEPTNO, DNAME, LOC, NVL(M.ENAME,'없음') 상사명 
  FROM EMP W, EMP M, DEPT D
  WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO;
--6. 이름, 급여, 등급, 부서명, 직속상사명. 급여가 2000이상인 사람
SELECT W.ENAME, W.SAL, GRADE, DNAME, M.ENAME 직속상사명
  FROM EMP W, EMP M, DEPT D, SALGRADE
  WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO AND W.SAL BETWEEN LOSAL AND HISAL
        AND w.sal>=2000; -- 직속상사가 없는 직원까지 출력하려면 (+) OUTER JOIN
        
--7. 이름, 급여, 등급, 부서명, 직속상사명, (직속상사가 없는 직원까지 전체직원 부서명 순 정렬)
SELECT W.ENAME, W.SAL, GRADE, DNAME, M.ENAME 직속상사명
  FROM EMP W, EMP M, DEPT D, SALGRADE
  WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO AND W.SAL BETWEEN LOSAL AND HISAL
  ORDER BY DNAME;
--8. 이름, 급여, 등급, 부서명, 연봉, 직속상사명. 연봉=(급여+comm)*12 단 comm이 null이면 0
SELECT W.ENAME, W.SAL, GRADE, DNAME, (W.SAL+NVL(W.COMM,0))*12 연봉, M.ENAME 상사명
  FROM EMP W, EMP M, DEPT D, SALGRADE 
  WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO AND W.SAL BETWEEN LOSAL AND HISAL;
--9. 8번을 부서명 순 부서가 같으면 급여가 큰 순 정렬
SELECT W.ENAME, W.SAL, GRADE, DNAME, (W.SAL+NVL(W.COMM,0))*12 연봉, M.ENAME 상사 
  FROM EMP W, EMP M, DEPT D, SALGRADE
  WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO AND W.SAL BETWEEN LOSAL AND HISAL
  ORDER BY DNAME, W.SAL DESC;
--  PART2
--1.EMP 테이블에서 모든 사원에 대한 이름,부서번호,부서명을 출력하는 SELECT 문장을 작성하여라.
SELECT ENAME, E.DEPTNO, DNAME 
  FROM EMP E, DEPT D 
  WHERE E.DEPTNO=D.DEPTNO;
--2. EMP 테이블에서 NEW YORK에서 근무하고 있는 사원에 대하여 이름,업무,급여,부서명을 출력
SELECT ENAME, JOB, SAL, DNAME 
  FROM EMP E, DEPT D 
  WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';
--3. EMP 테이블에서 보너스를 받는 사원에 대하여 이름,부서명,위치를 출력
SELECT ENAME, DNAME, LOC
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO AND COMM IS NOT NULL AND COMM <> 0;
--4. EMP 테이블에서 이름 중 L자가 있는 사원에 대하여 이름,업무,부서명,위치를 출력
SELECT ENAME, JOB, DNAME, LOC
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO AND ENAME LIKE '%L%';
--5. 사번, 사원명, 부서코드, 부서명을 검색하라. 사원명기준으로 오름차순정열
SELECT EMPNO, ENAME, D.DEPTNO, DNAME
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO
  ORDER BY ENAME;
--6. 사번, 사원명, 급여, 부서명을 검색하라. 
    --단 급여가 2000이상인 사원에 대하여 급여를 기준으로 내림차순으로 정열하시오
SELECT EMPNO, ENAME, SAL, DNAME
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO AND SAL>=2000
  ORDER BY SAL DESC;
--7. 사번, 사원명, 업무, 급여, 부서명을 검색하시오. 단 업무가 MANAGER이며 급여가 2500이상인
-- 사원에 대하여 사번을 기준으로 오름차순으로 정열하시오.
SELECT EMPNO, ENAME, JOB, SAL, DNAME
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER' AND SAL>=2500
  ORDER BY EMPNO;
--8. 사번, 사원명, 업무, 급여, 등급을 검색하시오. 단, 급여기준 내림차순으로 정렬하시오
SELECT EMPNO, ENAME, JOB, SAL, GRADE
  FROM EMP, SALGRADE
  WHERE SAL BETWEEN LOSAL AND HISAL
  ORDER BY SAL DESC;
--9. 사원테이블에서 사원명, 사원의 상사를 검색하시오(상사가 없는 직원까지 전체)
SELECT W.ENAME 사원명, M.ENAME 상사
  FROM EMP W, EMP M
  WHERE W.MGR=M.EMPNO(+);
--10. 사원명, 상사명, 상사의 상사명을 검색하시오
SELECT W.ENAME 사원, M.ENAME 상사
  FROM EMP W, EMP M, EMP MM
  WHERE W.MGR=M.EMPNO AND M.MGR=MM.EMPNO;
--11. 위의 결과에서 상위 상사가 없는 모든 직원의 이름도 출력되도록 수정하시오
SELECT W.ENAME 사원, NVL(M.ENAME,'') 상사, MM.ENAME "상사의 상사"
  FROM EMP W, EMP M, EMP MM
  WHERE W.MGR=M.EMPNO(+) AND M.MGR=MM.EMPNO(+);
SELECT W.ENAME 사원, '▶'||M.ENAME 상사, '▶'||MM.ENAME "상사의 상사"
  FROM EMP W, EMP M, EMP MM
  WHERE W.MGR=M.EMPNO(+) AND M.MGR=MM.EMPNO(+);